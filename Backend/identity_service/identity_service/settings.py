"""
Django settings for identity_service project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os # <-- Import os
from pathlib import Path
from dotenv import load_dotenv # <-- Import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR.parent, '.env')) # <-- Load from root .env for Docker Compose
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-fwa54x-s!0k6_9t1qa96pwv+ax&*))u_bqldeab$j4g(==!atj') # <-- Read from env

# SECURITY WARNING: don't run with debug turned on in production!
# Read DEBUG from environment, convert string ('True'/'False') to boolean
DEBUG_STR = os.environ.get('DEBUG', 'True')
DEBUG = DEBUG_STR.lower() == 'true' or DEBUG_STR == '1' # Case insensitive check for 'true' or '1'

# Read ALLOWED_HOSTS from environment, split by comma
ALLOWED_HOSTS_STR = os.environ.get('ALLOWED_HOSTS', '127.0.0.1,localhost')
ALLOWED_HOSTS = ALLOWED_HOSTS_STR.split(',') if ALLOWED_HOSTS_STR else [] # <-- Read from env and split

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-fwa54x-s!0k6_9t1qa96pwv+ax&*))u_bqldeab$j4g(==!atj'



# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'identity_app', # <-- Add your app
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # Add this SECOND (after security, before common/csrf)
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'identity_service.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'identity_service.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Database
# Read database configuration from environment variables
DB_NAME = os.environ.get('DB_NAME', 'sand_fp_db_identity') # Default to specific name
DB_USER = os.environ.get('DB_USER', 'root') # Default to user
DB_PASSWORD = os.environ.get('DB_PASSWORD', 'tungcoi1234') # Default to password
DB_HOST = os.environ.get('DB_HOST', 'localhost') # Default to localhost for local dev
DB_PORT = os.environ.get('DB_PORT', '3306') # Default to 3306

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': DB_HOST,
        'PORT': DB_PORT,
    }
}

# AUTH_USER_MODEL should still be present ONLY in Identity Service
AUTH_USER_MODEL = 'identity_app.User'


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CORS_ALLOW_ALL_ORIGINS = True
